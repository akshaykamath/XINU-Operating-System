How do the sizes of the new allocation routines compare to the sizes of getstk and getmem?
===============================================================================================
The difference between getpstk (permanently allocate memory in stack) and getstk exists in the requested bytes. 
1. For getpstk() syscall, instead of rounding off the requested bytes around multiple of 8 bytes, we directly return required space to the caller. This would leave the memory divided into chunks of non-uniform size.
2. The syscall getpmem() follows similar idea of getpstk() which avoids rounding off the requested size and directly returns the address of available space (which is exact size of the request).
3. For both the allocations, we do not call free memory which allows the allocated space to reside permanently in memory and become unusable for any other process(s).
4. For example, in our code, we have created a struct of 12 bytes, however, when getmem() is called for a pointer of this datatype, it gets rounded off to 16 bytes, whereas getpmem() allocates exactly 12 bytes.
5. This would also hold true for getpstk().
