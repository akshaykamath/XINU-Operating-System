#include <memgt.h>
#include <ctype.h>
#include <stdlib.h>

int n ;                 //Definition for global variable 'n'
sid32 consumed,produced;

shellcmd xsh_memgt(int nargs, char *args[])
{
        //Argument verifications and validations

        int count = 2000;             //local variable to hold count
	int i = 0;

	// Initialise the value of n to 0, since this is an extern variable, it may start with the previous value
	
 	/* Output info for '--help' argument */
	if (nargs == 2 && strncmp(args[1], "--help", 7) == 0) 
	{
		printf("Usage: %s\n\n", args[0]);
		printf("Description:\n");
		printf("\tProducer Consumer solution using semaphore synchronization or futures.\n");
		printf("Options (one per invocation):\n");		
		printf("\t--help\tdisplay this help and exit\n");
		printf("\t-f\tUses futures with 3 modes - FUTURE_EXCLUSIVE,FUTURE_SHARED,FUTURE_QUEUE\n");
		printf("\tn\tnumber of values to be produced and consumed,default is 2000\n");
		return 0;
	}

	/* Check argument count */
	/* If argument count is greater than 2, then there are too many arguments*/
	if (nargs > 2) 
	{
		fprintf(stderr, "%s: too many arguments\n", args[0]);
		return 1;
	}

	/* If argument count is equal to 2, then assign args[1] to count variable */
	if (nargs == 2) 
	{
		if(strcmp(args[1],"-1")==0)
		{
			
		}
		else if(strcmp(args[1],"-2")==0){
		{
			
		}
		else 
		{
			
		}
	}
	
      printf("alloc");
      return 0;
}





